name: CI

on:
  push:
    branches: [develop]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start services
        run: |
          docker compose build --no-cache
          docker compose up -d gitea
          echo "[CI] Waiting for Gitea to become ready..."
          bash scripts/wait_for_gitea.sh
          docker compose up -d tester

      - name: Run tests inside tester
        continue-on-error: true
        run: |
          # clean allure-results inside container before running tests
          docker exec tester rm -rf /app/allure-results || true
          docker exec tester mkdir -p /app/allure-results
          docker exec tester pytest -v -n auto --alluredir=/app/allure-results tests || true

      - name: Debug results on host
        if: always()
        run: |
          echo "[DEBUG] On host after tests:"
          ls -la ./allure-results || true

      - name: Upload allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: ./allure-results

  deploy-report:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download allure results
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: ./allure-results

      - name: Debug downloaded results
        if: always()
        run: |
          echo "[DEBUG] In deploy-report after download:"
          ls -la ./allure-results || true

      - name: Install Allure CLI
        run: |
          curl -sL https://github.com/allure-framework/allure2/releases/download/2.30.0/allure-2.30.0.tgz -o allure.tgz
          sudo tar -zxvf allure.tgz -C /opt/
          sudo ln -s /opt/allure-2.30.0/bin/allure /usr/local/bin/allure
          allure --version
    
      - name: Generate Allure Report
        run: |
          allure generate ./allure-results -o ./allure-report --clean

      - name: Upload Pages artifact
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./allure-report

      - name: Deploy to GitHub Pages
        if: always()
        id: deployment
        uses: actions/deploy-pages@v4
