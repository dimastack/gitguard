name: CI

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start services
        run: |
          docker compose build --no-cache
          docker compose up -d gitea
          echo "[CI] Waiting for Gitea to become ready..."
          bash scripts/wait_for_gitea.sh
          docker compose up -d tester

      - name: Run tests inside tester
        continue-on-error: true
        run: |
          set +e
          docker exec tester pytest -v -n auto --alluredir=/app/allure-results tests || true

      - name: Copy allure results
        if: always()
        run: |
          mkdir -p ./allure-results
          docker cp tester:/app/allure-results/. ./allure-results

      - name: Upload allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: ./allure-results

      - name: Generate Allure Report
        if: always()
        run: |
          pip install allure-pytest
          allure generate ./allure-results -o ./allure-report --clean || true

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./allure-report

  deploy-report:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:

      - name: Deploy to GitHub Pages
        if: always()
        uses: actions/deploy-pages@v4
